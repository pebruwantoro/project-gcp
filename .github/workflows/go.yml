# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build, and Deploy to GCP

on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    name: Build, and Deploy to GCP
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22' 

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.GCP_PROJECT_ID }}/project-gcp:latest .

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Authenticate Docker to Google Container Registry
      run: |
        cat <<EOL > key.json
        ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        EOL
        gcloud auth activate-service-account --key-file=key.json
        gcloud auth configure-docker

    - name: Tag and Push Docker Image to GCR
      run: |
        docker tag ${{ secrets.GCP_PROJECT_ID }}/project-gcp:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/project-gcp:latest
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/project-gcp:latest

    - name: SSH into Compute Engine and deploy container
      run: |
        sudo apt-get install sshpass
        
        sshpass -p ${{ secrets.GCE_VM_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_VM_USERNAME }}@${{ secrets.GCE_VM_IP }} <<EOF
          docker pull gcr.io/${{ secrets.GCP_PROJECT_ID }}/project-gcp:latest
          docker stop project-gcp || true
          docker rm project-gcp || true
          docker run -d --name project-gcp -p 8080:8080 gcr.io/${{ secrets.GCP_PROJECT_ID }}/project-gcp:latest
        EOF

    # - name: Deploy to Cloud Run
    #   run: |
    #     gcloud run deploy project-gcp \
    #       --image=gcr.io/${{ secrets.GCP_PROJECT_ID }}/project-gcp:latest \
    #       --platform=managed \
    #       --region=asia-southeast2\
    #       --allow-unauthenticated

